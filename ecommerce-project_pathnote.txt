Perfect, Iman. Below is your **updated full project structure** for your **non-React** e-commerce site using:

* **HTML/CSS/JavaScript** (frontend)
* **Node.js + Express** (backend)
* **MongoDB Atlas** (database)

---

## ✅ NEW PROJECT STRUCTURE (No React)

```
ecommerce-project/
├── backend/
│   ├── controllers/            ← Logic for users, products, orders, etc.
│   ├── database/               ← MongoDB connection file
│   ├── middleware/             ← Auth middleware, error handlers
│   ├── models/                 ← Mongoose schemas (User, Product, Order, etc.)
│   ├── routes/                 ← Express routers (authRoutes, productRoutes, etc.)
│   ├── seed/                   ← Scripts to populate mock data
│   ├── utils/                  ← Helpers (JWT, OTP, mail, etc.)
│   ├── views/                  ← All HTML pages served by Express
│   │   ├── index.html              ← Home page
│   │   ├── products.html           ← All Products
│   │   ├── product-details.html    ← Product Detail
│   │   ├── cart.html               ← Shopping Cart
│   │   ├── wishlist.html           ← Wishlist
│   │   ├── profile.html            ← User Profile
│   │   ├── orders.html             ← Order History
│   │   ├── checkout.html           ← Checkout
│   │   ├── signup.html             ← Signup
│   │   ├── login.html              ← Login
│   │   ├── otp.html                ← OTP Verification
│   │   ├── forgot-password.html    ← Forgot Password
│   │   ├── reset-password.html     ← Reset Password
│   │   └── admin/
│   │       ├── index.html          ← Admin Dashboard
│   │       ├── products.html       ← Admin - Manage Products
│   │       ├── orders.html         ← Admin - Manage Orders
│   │       └── users.html          ← Admin - Manage Users (optional)
│   ├── public/                 ← Static assets
│   │   ├── css/
│   │   │   └── style.css           ← Common stylesheet
│   │   ├── js/
│   │   │   ├── main.js             ← General client-side logic
│   │   │   ├── auth.js             ← Signup/Login/OTP
│   │   │   ├── cart.js             ← Cart logic
│   │   │   ├── wishlist.js         ← Wishlist logic
│   │   │   ├── products.js         ← Product display logic
│   │   │   └── admin.js            ← Admin functionality
│   │   └── images/                 ← Logos, product images
│   ├── index.js                 ← Express app entry point
│   ├── .env                     ← Environment variables
│   ├── package.json
│   └── vercel.json              ← (Optional for deployment on Vercel)
│
├── README.md
```

---

## 🧠 Summary of Page Routes

| Page                     | File Path                    | URL Route          |
| ------------------------ | ---------------------------- | ------------------ |
| Home                     | `views/index.html`           | `/`                |
| All Products             | `views/products.html`        | `/products`        |
| Product Details          | `views/product-details.html` | `/product/:id`     |
| Cart                     | `views/cart.html`            | `/cart`            |
| Wishlist                 | `views/wishlist.html`        | `/wishlist`        |
| Profile                  | `views/profile.html`         | `/profile`         |
| Orders (history)         | `views/orders.html`          | `/orders`          |
| Checkout                 | `views/checkout.html`        | `/checkout`        |
| Login                    | `views/login.html`           | `/login`           |
| Signup                   | `views/signup.html`          | `/signup`          |
| OTP Verification         | `views/otp.html`             | `/otp`             |
| Forgot Password          | `views/forgot-password.html` | `/forgot-password` |
| Reset Password           | `views/reset-password.html`  | `/reset-password`  |
| Admin Dashboard          | `views/admin/index.html`     | `/admin`           |
| Admin - Products         | `views/admin/products.html`  | `/admin/products`  |
| Admin - Orders           | `views/admin/orders.html`    | `/admin/orders`    |
| Admin - Users (optional) | `views/admin/users.html`     | `/admin/users`     |

---

## 🛠 Frontend Logic Breakdown (`public/js/`)

| JS File       | Purpose                                   |
| ------------- | ----------------------------------------- |
| `main.js`     | Global JS (navbar, footer, general logic) |
| `auth.js`     | Signup/Login/OTP/Reset logic              |
| `products.js` | Load & display product lists              |
| `cart.js`     | Manage cart items, quantities, totals     |
| `wishlist.js` | Wishlist add/remove/annotate              |
| `admin.js`    | Admin add/edit/delete products/orders     |

---

## ✅ What You Need Next:

Would you like to start with:

1. Setting up the **Express backend** and serving a basic `index.html`?
2. Creating your **MongoDB connection**?
3. Designing your first HTML page (e.g., `index.html`)?
4. Or implementing **auth** logic?

Let me know how you’d like to proceed!
